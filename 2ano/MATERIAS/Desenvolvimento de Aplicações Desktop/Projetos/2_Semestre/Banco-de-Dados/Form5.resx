<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>